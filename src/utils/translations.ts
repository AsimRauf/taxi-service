import { WebsiteTranslations } from '@/types/translations';
import { TFunction } from 'next-i18next';


export const createTranslationsObject = (t: TFunction, locale: string): WebsiteTranslations => ({
  errors: {
    requiredLocations: t('errors.requiredLocations'),
    invalidPrice: t('errors.invalidPrice'),
    invalidPickupTime: t('errors.invalidPickupTime'),
    invalidReturnTime: t('errors.invalidReturnTime'),
    invalidDates: t('errors.invalidDates'),
    pickupDateRequired: t('errors.pickupDateRequired'),
    returnDateRequired: t('errors.returnDateRequired'),
    invalidStopover: t('errors.invalidStopover'),
    maxStopovers: t('errors.maxStopovers'),
    duplicateLocation: t('errors.duplicateLocation'),
    invalidPassengers: t('errors.invalidPassengers'),
    invalidLuggage: t('errors.invalidLuggage'),
    invalidVehicle: t('errors.invalidVehicle'),
    invalidRoute: t('errors.invalidRoute')
  },
  nav: {
    login: t('nav.login'),
    services: t('nav.services'),
    contact: t('nav.contact'),
    aboutUs: t('nav.aboutUs'),
    service1: t('nav.service1'),
    service2: t('nav.service2'),
    profile: t('nav.profile'),
    signOut: t('nav.signOut')
  },
  auth: {
    createAccount: t('auth.createAccount'),
    fullName: t('auth.fullName'),
    nameRequired: t('auth.nameRequired'),
    emailRequired: t('auth.emailRequired'),
    invalidEmail: t('auth.invalidEmail'),
    phoneRequired: t('auth.phoneRequired'),
    invalidPhone: t('auth.invalidPhone'),
    passwordRequired: t('auth.passwordRequired'),
    passwordLength: t('auth.passwordLength'),
    passwordMatch: t('auth.passwordMatch'),
    genericError: t('auth.genericError'),
    creating: t('auth.creating'),
    create: t('auth.create'),
    haveAccount: t('auth.haveAccount'),
    signin: t('auth.signin'),
    password: t('auth.password'),
    phoneNumber: t('auth.phoneNumber'),
    confirmPassword: t('auth.confirmPassword')
  },
  hero: {
    title: t('hero.title'),
    subtitle: t('hero.subtitle'),
    formTitle: t('hero.formTitle'),
    pickup: t('hero.pickup'),
    pickupPlaceholder: t('hero.pickupPlaceholder'),
    destination: t('hero.destination'),
    destinationPlaceholder: t('hero.destinationPlaceholder'),
    addStopover: t('hero.addStopover'),
    swapLocations: t('hero.swapLocations'),
    stopover: t('hero.stopover'),
    removeStopover: t('hero.removeStopover'),
    pickupDateTime: t('hero.pickupDateTime'),
    returnTrip: t('hero.returnTrip'),
    returnDateTime: t('hero.returnDateTime'),
    luggage: t('hero.luggage'),
    travelers: t('hero.travelers'),
    person: t('hero.person'),
    people: t('hero.people'),
    calculate: t('hero.calculate'),
    returnPlaceholder: t('hero.returnPlaceholder')
  },
  booking: {
    title: t('booking.title'),
    from: t('booking.from'),
    to: t('booking.to'),
    distance: t('booking.distance'),
    duration: t('booking.duration'),
    passengers: t('booking.passengers'),
    luggage: t('booking.luggage'),
    yes: t('booking.yes'),
    no: t('booking.no'),
    pickupTime: t('booking.pickupTime'),
    returnTime: t('booking.returnTime'),
    totalPrice: t('booking.totalPrice'),
    returnIncluded: t('booking.returnIncluded'),
    back: t('booking.back'),
    bookNow: t('booking.bookNow')
  },
  locale: locale
});